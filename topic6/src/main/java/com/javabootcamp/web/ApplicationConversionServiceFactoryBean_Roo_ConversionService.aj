// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.javabootcamp.web;

import com.javabootcamp.model.Attendee;
import com.javabootcamp.model.Meeting;
import com.javabootcamp.model.Room;
import com.javabootcamp.web.ApplicationConversionServiceFactoryBean;
import org.springframework.beans.factory.annotation.Configurable;
import org.springframework.core.convert.converter.Converter;
import org.springframework.format.FormatterRegistry;

privileged aspect ApplicationConversionServiceFactoryBean_Roo_ConversionService {
    
    declare @type: ApplicationConversionServiceFactoryBean: @Configurable;
    
    public Converter<Attendee, String> ApplicationConversionServiceFactoryBean.getAttendeeToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.javabootcamp.model.Attendee, java.lang.String>() {
            public String convert(Attendee attendee) {
                return new StringBuilder().append(attendee.getFirstName()).append(' ').append(attendee.getLastName()).append(' ').append(attendee.getEmail()).toString();
            }
        };
    }
    
    public Converter<Long, Attendee> ApplicationConversionServiceFactoryBean.getIdToAttendeeConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.javabootcamp.model.Attendee>() {
            public com.javabootcamp.model.Attendee convert(java.lang.Long id) {
                return Attendee.findAttendee(id);
            }
        };
    }
    
    public Converter<String, Attendee> ApplicationConversionServiceFactoryBean.getStringToAttendeeConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.javabootcamp.model.Attendee>() {
            public com.javabootcamp.model.Attendee convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Attendee.class);
            }
        };
    }
    
    public Converter<Meeting, String> ApplicationConversionServiceFactoryBean.getMeetingToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.javabootcamp.model.Meeting, java.lang.String>() {
            public String convert(Meeting meeting) {
                return new StringBuilder().append(meeting.getStartDate()).append(' ').append(meeting.getEndDate()).toString();
            }
        };
    }
    
    public Converter<Long, Meeting> ApplicationConversionServiceFactoryBean.getIdToMeetingConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.javabootcamp.model.Meeting>() {
            public com.javabootcamp.model.Meeting convert(java.lang.Long id) {
                return Meeting.findMeeting(id);
            }
        };
    }
    
    public Converter<String, Meeting> ApplicationConversionServiceFactoryBean.getStringToMeetingConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.javabootcamp.model.Meeting>() {
            public com.javabootcamp.model.Meeting convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Meeting.class);
            }
        };
    }
    
    public Converter<Room, String> ApplicationConversionServiceFactoryBean.getRoomToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.javabootcamp.model.Room, java.lang.String>() {
            public String convert(Room room) {
                return new StringBuilder().append(room.getRoomName()).append(' ').append(room.getCapacity()).toString();
            }
        };
    }
    
    public Converter<Long, Room> ApplicationConversionServiceFactoryBean.getIdToRoomConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.javabootcamp.model.Room>() {
            public com.javabootcamp.model.Room convert(java.lang.Long id) {
                return Room.findRoom(id);
            }
        };
    }
    
    public Converter<String, Room> ApplicationConversionServiceFactoryBean.getStringToRoomConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.javabootcamp.model.Room>() {
            public com.javabootcamp.model.Room convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Room.class);
            }
        };
    }
    
    public void ApplicationConversionServiceFactoryBean.installLabelConverters(FormatterRegistry registry) {
        registry.addConverter(getAttendeeToStringConverter());
        registry.addConverter(getIdToAttendeeConverter());
        registry.addConverter(getStringToAttendeeConverter());
        registry.addConverter(getMeetingToStringConverter());
        registry.addConverter(getIdToMeetingConverter());
        registry.addConverter(getStringToMeetingConverter());
        registry.addConverter(getRoomToStringConverter());
        registry.addConverter(getIdToRoomConverter());
        registry.addConverter(getStringToRoomConverter());
    }
    
    public void ApplicationConversionServiceFactoryBean.afterPropertiesSet() {
        super.afterPropertiesSet();
        installLabelConverters(getObject());
    }
    
}
